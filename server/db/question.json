{
  "questions": [
    {
      "id": 1,
      "ques": "How can you instantiate a class created with the class expression (e.g. class Foo{})?",
      "options": { "A": "let x = new Foo();", "B": "let x = Foo();" },
      "ans": "A"
    },
    {
      "id": 2,
      "ques": "How can you create a custom synthetic event?",
      "options": {
        "A": "var e = new Synthetic('build');",
        "B": "var e = new Event('build');"
      },
      "ans": "B"
    },
    {
      "id": 3,
      "ques": "How can you instantiate a RegExp object?",
      "options": {
        "A": "There is no RegExp object in modern JavaScript; it is an experimental ES.Next feature",
        "B": "With the constructor: new RegExp('^d+$'); or as a literal: /^d+$/"
      },
      "ans": "B"
    },
    {
      "id": 4,
      "ques": "How can you find out if an object, Foo, 'inherited' from another object, Bar?",
      "options": {
        "A": "Using Foo.prototype.isPrototypeOf()",
        "B": "A triple equals comparison will examine prototype chains; assert Foo === Bar is true"
      },
      "ans": "A"
    },
    {
      "id": 5,
      "ques": "What object can return a new object with the current browser time or a specified date and time?",
      "options": { "A": "The Date() object", "B": "The DateTime() object" },
      "ans": "A"
    }
  ]
}
